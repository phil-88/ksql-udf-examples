package ru.avito.ksql.udf.udf;

import org.junit.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;

import static org.assertj.core.api.Assertions.assertThat;
import static org.junit.Assert.assertTrue;

public class OutlierPercentileTest {

    @Test
    public void testNotNull() {
        HashMap<String, Long> map = new HashMap<>();
        map.put("d", 10L);
        map.put("b", 2L);
        map.put("c", 2L);
        map.put("a", 1L);

        OutlierPercentile e = new OutlierPercentile();
        Map<String, Long> res = e.outlier_percentile(map, 50, 1, 1);

        assertTrue(res.get("d") != null);
    }

    @Test
    public void testBelowMin() {
        HashMap<String, Long> map = new HashMap<>();
        map.put("a", 1L);
        map.put("b", 2L);
        map.put("c", 2L);
        map.put("d", 10L);

        OutlierPercentile e = new OutlierPercentile();
        Map<String, Long> res = e.outlier_percentile(map, 90, 1, 10);

        assertTrue(res == null);
    }

    @Test
    public void testNull() {
        HashMap<String, Long> map = new HashMap<>();

        OutlierPercentile e = new OutlierPercentile();
        Map<String, Long> res = e.outlier_percentile(map, 90, 1, 0);

        assertTrue(res == null || res.size() == 0);
    }

    @Test
    public void testArray() {
        int[] a = new int[]{1925122130, 1925122130, 1925122130, 1048097477, 1453114091, 1149001652, 1907966281, 1936290858, 1934980364, 1925122130, 1945213621, 1951760647, 1948098230, 1928233151, 1506976951, 1808134388, 1661909485, 1943715121, 1962601623, 1943992593, 900290140, 473735416, 1885100670, 1941737802, 1937485842, 1895257174, 1937889260, 1941898572, 1489633181, 1934485121, 1224511034, 1097235196, 1901925918, 1945786004, 830448103, 1854366749, 1929727998, 1933279772, 371147534, 1929314562, 1921926618, 1661043385, 1865788045, 1371997389, 1948494850, 1931241041, 1943990941, 1791064671, 1786781208, 1947747067, 1860545409, 1926872348, 1346648988, 1111561111, 1897167915, 1927411951, 1807645082, 1912104523, 1833495206, 1928173892, 1926623410, 1949129147, 1819128574, 721397388, 1918930707, 1803513650, 1208600364, 1926067700, 1872017836, 1528667268, 1922209729, 860469225, 1832044198, 1924462119, 488720068, 1939758237, 1937802355, 1895954356, 1936704204, 1876857970, 1924880190, 1936449192, 1890463172, 1889427589, 1884593770, 1802717891, 1368357067, 1925543910, 1815413888, 1870822993, 1913432093, 1941437606, 1800230326, 1946703781, 1861932037, 1930459060, 1859608390, 1938085459, 1156378987, 1951338370, 1872384546, 1945581167, 1938155162, 1482559555, 1834778863, 1782135140, 1934191776, 1917734694, 1953940860, 1877593347, 1780928377, 1931425364, 1628322425, 1849792192, 1183102649, 1925648496, 1079428810, 1954257658, 1949520514, 1943153100, 941683805, 1780893251, 1626116728, 1932624439, 708156563, 1929687296, 675206184, 865132659, 884923087, 1931636386, 1866745507, 1835646376, 1689898981, 1758798191, 1375800457, 1411445202, 1946828663, 1894359920, 1447508040, 1867018002, 86524367, 775758121, 1947803706, 1930469821, 1321146944, 1900409285, 1937021235, 900174710, 1824131159, 1941249744, 1881890184, 1760528858, 1900456421, 1864607317, 1929707753, 1951889116, 1930023041, 1858489289, 1934128892, 1547530984, 1904593543, 1914873875, 1927557627, 1899065806, 1922499255, 1630929284, 1170474492, 1718651026, 1937902443, 791808186, 1426678117, 1324349897, 1866999084, 1941529783, 1947879918, 1907656564, 1948979750, 1624360642, 1929067618, 1853448040, 1871389224, 1926513339, 1944847648, 1270398680, 1949688544, 1933167453, 1946199604, 1904831816, 1935088944, 1783731689, 1927898510, 1923213794, 1816370355, 1932501446, 1467487588, 903947632, 1927474224, 1825013833, 1861053915, 1911412305, 1208567184, 1886004897, 1776540920, 1942164358, 1265860293, 1065180657, 1502769767, 1907863731, 1414441816, 1117980445, 1012215459, 1513829585, 1928640678, 1927269635, 1803740462, 1920598863, 1896003616, 1442008168, 1444507215, 1927652766, 1918057655, 1697564797, 322194781, 1949552068, 1927957832, 1272830549, 1909571590, 1043164306, 1771156210, 1939372367, 1531207479, 1946918805, 1890926361, 1781792996, 1785676393, 866135524, 1660071778, 1929800730, 1818383921, 1928409511, 1861932037, 1922421808, 1780729595, 1829177458, 1946527974, 1921172864, 1857107522, 1894574104, 1888571456, 1919828097, 1948769376, 1891276849, 1823872146, 1895187943, 1951568656, 1923890806, 1766431412, 1941047310, 1898250514, 1866248043, 1548848602, 1891058412, 1010745316, 1282555759, 1456539876, 1801791151, 1942641372, 1929685663, 1936371786, 1827497303, 1936880850, 1892694603, 1919750530, 1923355517, 1876822250, 1872064363, 647865859, 1689253550, 1931807491, 1946445702, 1920707464, 1913084569, 1926893537, 1928545591, 1297861311, 717633400, 297622922, 1673186651, 1863422113, 1790472524, 1919582603, 1870087659, 1948608444, 1938697158, 1947094491, 608871843, 1938241157, 1945568002, 1926451091, 1380347388, 1446757573, 1871909529, 1770872160, 1188316829, 1838286074, 1919457942, 1829173139, 1357396371, 1512585796, 1830344723, 693844876, 1459229519, 1929520228, 1919418245, 1919073032, 1918139586, 1947505988, 1893590555, 1581254487, 1912073959, 1948921628, 1945861478, 1921744221, 1904641483, 1921302491, 1941409800, 1768276576, 1213102123, 1261919834, 1844847581, 1870882055, 779680128, 1812756300, 1929558079, 1946828663, 1443459307, 1764819740, 1923966185, 1921162283, 1925648496, 1217900218, 1927266713, 1935310062, 1789093232, 1148883403, 1929970593, 1760662237, 1812503397, 1836987790, 1933206819, 585503735, 1924730810, 1901033148, 1970008774, 1827481673, 1837128716, 1909301535, 1283416525, 1940659322, 1903420892, 1912498126, 1888832021, 1928293867, 1940977295, 1780335420, 1941779621, 1935576021, 1955359283, 1579157168, 1918500558, 1861539654, 1876147130, 1786781208, 1795965464, 1934846297, 1787345571, 1918356383, 1801390824, 1936130870, 1834821394, 1823713027, 1905493921, 1946394334, 1921303374, 1898149008, 1763303887, 1943801734, 1662389560, 1947556931, 1816298526, 1574402052, 537280193, 1939173429, 1835641858, 683359859, 1943713425, 967220598, 1894335787, 1905737234, 1948118480, 1846935725, 921221453, 1816298526, 1932038184, 1911693659, 1519673681, 1935775204, 1929673353, 1919003607, 1874790288, 1643558664, 1921458780, 1792562042, 1870684945, 1902224134, 1795938809, 1807806084, 1923536866, 1895016135, 1820555666, 1936343311, 1936462903, 1123710311, 1849295761, 1962165502, 1762379058, 1886233787, 1942354031, 288455414, 1919516047, 1936606701, 1902614314, 1859526917, 1935947309, 1879403969, 1937299511, 1836039716, 1939322455, 1924806915, 1448482479, 1883073478, 1927100992, 1880758924, 1526836349, 1816203646, 1797660568, 1866596591, 1918777052, 1901641634, 1932997824, 1819678374, 1925496090, 1786528188, 1038486863, 1938056950, 1901521921, 1920521570, 1909333098, 1943595424, 1113222001, 1099234073, 1341632035, 1836845159, 1932592899, 1761052735, 144161520, 1928746322, 1893423363, 1886298628, 1882309630, 1934884569, 1924439827, 1842053642, 1941026259, 1947849596, 1916796605, 1919426063, 1582167666, 1941898572, 1700237212, 855914127, 1940545459, 1856793046, 1828890420, 1888023777, 1906315182, 1164386530, 1810464863, 1945013154, 1071553801, 1932335257, 1682037067, 1382241148, 1483757341, 1408863756, 1844498906, 1896878529, 1912798398, 1945716884, 1391729817, 1935613512, 1878725698, 1933340108, 1830136264};

        ArrayList<Integer> arr = new ArrayList<>(a.length);
        for (int i : a)
        {
            arr.add(i);
        }

        OutlierPercentile e = new OutlierPercentile();
        Map<String, Long> res = e.outlier_percentile(arr, 90, 1, 3);

        assertTrue(res.get("1925122130") != null);
    }
}